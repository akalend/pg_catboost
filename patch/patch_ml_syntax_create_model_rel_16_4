diff --git a/src/backend/catalog/objectaddress.c b/src/backend/catalog/objectaddress.c
index 95fefc7565..bab1f42217 100644
--- a/src/backend/catalog/objectaddress.c
+++ b/src/backend/catalog/objectaddress.c
@@ -1035,6 +1035,7 @@ get_object_address(ObjectType objtype, Node *object,
 			case OBJECT_ROLE:
 			case OBJECT_SCHEMA:
 			case OBJECT_LANGUAGE:
+			case OBJECT_MODEL:
 			case OBJECT_FDW:
 			case OBJECT_FOREIGN_SERVER:
 			case OBJECT_EVENT_TRIGGER:
@@ -2325,6 +2326,7 @@ pg_get_object_address(PG_FUNCTION_ARGS)
 		case OBJECT_TABCONSTRAINT:
 		case OBJECT_OPCLASS:
 		case OBJECT_OPFAMILY:
+		case OBJECT_MODEL:
 			objnode = (Node *) name;
 			break;
 		case OBJECT_ACCESS_METHOD:
@@ -2583,6 +2585,7 @@ check_object_ownership(Oid roleid, ObjectType objtype, ObjectAddress address,
 		case OBJECT_AMPROC:
 		case OBJECT_DEFAULT:
 		case OBJECT_DEFACL:
+		case OBJECT_MODEL:
 		case OBJECT_PUBLICATION_NAMESPACE:
 		case OBJECT_PUBLICATION_REL:
 		case OBJECT_USER_MAPPING:
diff --git a/src/backend/commands/seclabel.c b/src/backend/commands/seclabel.c
index 7ff16e3276..0c8d06ae3d 100644
--- a/src/backend/commands/seclabel.c
+++ b/src/backend/commands/seclabel.c
@@ -75,6 +75,7 @@ SecLabelSupportsObjectType(ObjectType objtype)
 		case OBJECT_FDW:
 		case OBJECT_FOREIGN_SERVER:
 		case OBJECT_INDEX:
+		case OBJECT_MODEL:
 		case OBJECT_OPCLASS:
 		case OBJECT_OPERATOR:
 		case OBJECT_OPFAMILY:
diff --git a/src/backend/nodes/gen_node_support.pl b/src/backend/nodes/gen_node_support.pl
index d67565b925..77ea15409f 100644
--- a/src/backend/nodes/gen_node_support.pl
+++ b/src/backend/nodes/gen_node_support.pl
@@ -107,7 +107,7 @@ my @nodetag_only_files = qw(
 # ABI stability during development.
 
 my $last_nodetag = 'WindowObjectData';
-my $last_nodetag_no = 454;
+my $last_nodetag_no = 456;
 
 # output file names
 my @output_files;
diff --git a/src/backend/parser/gram.y b/src/backend/parser/gram.y
index c31b373358..40336a94b9 100644
--- a/src/backend/parser/gram.y
+++ b/src/backend/parser/gram.y
@@ -159,7 +159,6 @@ typedef struct KeyActions
 #define CAS_NOT_VALID				0x10
 #define CAS_NO_INHERIT				0x20
 
-
 #define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
 #define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
 
@@ -217,6 +216,7 @@ static PartitionStrategy parsePartitionStrategy(char *strategy);
 static void preprocess_pubobj_list(List *pubobjspec_list,
 								   core_yyscan_t yyscanner);
 static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
+static Node *makeModelElement(char* key, char *value, int16);
 
 %}
 
@@ -295,7 +295,7 @@ static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
 		CreateDomainStmt CreateExtensionStmt CreateGroupStmt CreateOpClassStmt
 		CreateOpFamilyStmt AlterOpFamilyStmt CreatePLangStmt
 		CreateSchemaStmt CreateSeqStmt CreateStmt CreateStatsStmt CreateTableSpaceStmt
-		CreateFdwStmt CreateForeignServerStmt CreateForeignTableStmt
+		CreateFdwStmt CreateForeignServerStmt CreateForeignTableStmt CreateModelStmt
 		CreateAssertionStmt CreateTransformStmt CreateTrigStmt CreateEventTrigStmt
 		CreateUserStmt CreateUserMappingStmt CreateRoleStmt CreatePolicyStmt
 		CreatedbStmt DeclareCursorStmt DefineStmt DeleteStmt DiscardStmt DoStmt
@@ -659,6 +659,8 @@ static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
 				json_object_constructor_null_clause_opt
 				json_array_constructor_null_clause_opt
 
+%type <node>	OptModelElement
+%type <list>	OptModelElements OptModelElementList
 
 /*
  * Non-keyword token types.  These are hard-wired into the "flex" lexer.
@@ -673,6 +675,7 @@ static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
  * parse errors.  It is needed by PL/pgSQL.
  */
 %token <str>	IDENT UIDENT FCONST SCONST USCONST BCONST XCONST Op
+%token <fval>	FVAL
 %token <ival>	ICONST PARAM
 %token			TYPECAST DOT_DOT COLON_EQUALS EQUALS_GREATER
 %token			LESS_EQUALS GREATER_EQUALS NOT_EQUALS
@@ -693,7 +696,7 @@ static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
 	BOOLEAN_P BOTH BREADTH BY
 
 	CACHE CALL CALLED CASCADE CASCADED CASE CAST CATALOG_P CHAIN CHAR_P
-	CHARACTER CHARACTERISTICS CHECK CHECKPOINT CLASS CLOSE
+	CHARACTER CHARACTERISTICS CHECK CHECKPOINT CLASS CLASSIFICATION CLOSE
 	CLUSTER COALESCE COLLATE COLLATION COLUMN COLUMNS COMMENT COMMENTS COMMIT
 	COMMITTED COMPRESSION CONCURRENTLY CONFIGURATION CONFLICT
 	CONNECTION CONSTRAINT CONSTRAINTS CONTENT_P CONTINUE_P CONVERSION_P COPY
@@ -731,7 +734,7 @@ static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
 	LOCALTIME LOCALTIMESTAMP LOCATION LOCK_P LOCKED LOGGED
 
 	MAPPING MATCH MATCHED MATERIALIZED MAXVALUE MERGE METHOD
-	MINUTE_P MINVALUE MODE MONTH_P MOVE
+	MINUTE_P MINVALUE MODE MODEL MONTH_P MOVE
 
 	NAME_P NAMES NATIONAL NATURAL NCHAR NEW NEXT NFC NFD NFKC NFKD NO NONE
 	NORMALIZE NORMALIZED
@@ -750,7 +753,7 @@ static Node *makeRecursiveViewSelect(char *relname, List *aliases, Node *query);
 	QUOTE
 
 	RANGE READ REAL REASSIGN RECHECK RECURSIVE REF_P REFERENCES REFERENCING
-	REFRESH REINDEX RELATIVE_P RELEASE RENAME REPEATABLE REPLACE REPLICA
+	REFRESH REGRESSION REINDEX RELATIVE_P RELEASE RENAME REPEATABLE REPLACE REPLICA
 	RESET RESTART RESTRICT RETURN RETURNING RETURNS REVOKE RIGHT ROLE ROLLBACK ROLLUP
 	ROUTINE ROUTINES ROW ROWS RULE
 
@@ -1017,6 +1020,7 @@ stmt:
 			| CreateFunctionStmt
 			| CreateGroupStmt
 			| CreateMatViewStmt
+			| CreateModelStmt
 			| CreateOpClassStmt
 			| CreateOpFamilyStmt
 			| CreatePublicationStmt
@@ -11550,6 +11554,63 @@ CreateConversionStmt:
 			}
 		;
 
+/*****************************************************************************
+ *
+ *		QUERY :
+ *				CREATE [CLASSIFICATION | REGRESSION] MODEL name ( options ) FROM table
+ *
+ *****************************************************************************/
+CreateModelStmt:
+			CREATE MODEL name   '(' OptModelElementList ')' FROM name
+				{
+					CreateModelStmt *n = makeNode(CreateModelStmt);
+					n->objectType = OBJECT_MODEL;
+					n->modelname = $3;
+					n->tablename = $8;
+					n->options = $5;
+					n->modelclass = CREATE_MODEL_CLASSIFICATION;
+					$$ = (Node *) n;
+				}
+			| CREATE CLASSIFICATION MODEL name '(' OptModelElementList ')' FROM name
+				{
+					CreateModelStmt *n = makeNode(CreateModelStmt);
+					n->objectType = OBJECT_MODEL;
+					n->modelname = $4;
+					n->tablename = $9;
+					n->options = $6;
+					n->modelclass = CREATE_MODEL_CLASSIFICATION;
+					$$ = (Node *) n;
+				}
+			| CREATE REGRESSION MODEL name '(' OptModelElementList ')' FROM name
+				{
+					CreateModelStmt *n = makeNode(CreateModelStmt);
+					n->objectType = OBJECT_MODEL;
+					n->modelname = $4;
+					n->tablename = $9;
+					n->options = $6;
+					n->modelclass = CREATE_MODEL_REGRESSION;
+					$$ = (Node *) n;
+				}
+		;
+
+		OptModelElementList:
+			OptModelElements						{ $$ = $1; }
+			| /* EMPTY */							{ $$ = NIL; }
+		;
+
+		OptModelElements:
+			OptModelElement								{ $$ = list_make1($1); }
+			| OptModelElements ',' OptModelElement		{ $$ = lappend($1, $3); }
+		;
+
+		OptModelElement: 
+			name name 					{$$ = makeModelElement($1, $2, -1);}
+			| name Iconst 				{$$ = makeModelElement($1, NULL, $2);}
+			| name name name 			{$$ = makeModelElement($1, $3, -1);}
+			| name name Iconst 			{$$ = makeModelElement($1, NULL, $3);}
+		;
+
+
 /*****************************************************************************
  *
  *		QUERY:
@@ -14367,7 +14428,6 @@ interval_second:
 				}
 		;
 
-
 /*****************************************************************************
  *
  *	expression grammar
@@ -16969,6 +17029,7 @@ unreserved_keyword:
 			| CHARACTERISTICS
 			| CHECKPOINT
 			| CLASS
+			| CLASSIFICATION
 			| CLOSE
 			| CLUSTER
 			| COLUMNS
@@ -17092,6 +17153,7 @@ unreserved_keyword:
 			| MINUTE_P
 			| MINVALUE
 			| MODE
+			| MODEL
 			| MONTH_P
 			| MOVE
 			| NAME_P
@@ -17151,6 +17213,7 @@ unreserved_keyword:
 			| REF_P
 			| REFERENCING
 			| REFRESH
+			| REGRESSION			
 			| REINDEX
 			| RELATIVE_P
 			| RELEASE
@@ -17504,6 +17567,7 @@ bare_label_keyword:
 			| CHECK
 			| CHECKPOINT
 			| CLASS
+			| CLASSIFICATION
 			| CLOSE
 			| CLUSTER
 			| COALESCE
@@ -17676,6 +17740,7 @@ bare_label_keyword:
 			| METHOD
 			| MINVALUE
 			| MODE
+			| MODEL
 			| MOVE
 			| NAME_P
 			| NAMES
@@ -17752,6 +17817,7 @@ bare_label_keyword:
 			| REFERENCES
 			| REFERENCING
 			| REFRESH
+			| REGRESSION
 			| REINDEX
 			| RELATIVE_P
 			| RELEASE
@@ -18891,6 +18957,21 @@ makeRecursiveViewSelect(char *relname, List *aliases, Node *query)
 	return (Node *) s;
 }
 
+
+static Node *
+makeModelElement(char* key, char *value, int16 ival)
+{
+	ModelOptElement	*n = makeNode(ModelOptElement);
+	n->key = pstrdup(key);
+	if (value)
+		n->value = pstrdup(value);
+	else
+		n->value = psprintf("%d",ival);
+	n->ival = ival;
+
+	return (Node*) n;
+}
+
 /* parser_init()
  * Initialize to parse one query string
  */
@@ -18898,4 +18979,4 @@ void
 parser_init(base_yy_extra_type *yyext)
 {
 	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
-}
+}
\ No newline at end of file
diff --git a/src/backend/tcop/utility.c b/src/backend/tcop/utility.c
index e3ccf6c7f7..98dbcc4f67 100644
--- a/src/backend/tcop/utility.c
+++ b/src/backend/tcop/utility.c
@@ -2068,6 +2068,10 @@ UtilityReturnsTuples(Node *parsetree)
 		case T_VariableShowStmt:
 			return true;
 
+		case T_CreateModelStmt:
+			return false;
+
+
 		default:
 			return false;
 	}
@@ -2483,6 +2487,10 @@ CreateCommandTag(Node *parsetree)
 			tag = CMDTAG_CREATE_TABLE;
 			break;
 
+		case T_CreateModelStmt:
+			tag = CMDTAG_CREATE_MODEL;
+			break;
+
 		case T_CreateTableSpaceStmt:
 			tag = CMDTAG_CREATE_TABLESPACE;
 			break;
diff --git a/src/include/nodes/parsenodes.h b/src/include/nodes/parsenodes.h
index 9dca3b6528..5f99fad10a 100644
--- a/src/include/nodes/parsenodes.h
+++ b/src/include/nodes/parsenodes.h
@@ -2102,6 +2102,7 @@ typedef enum ObjectType
 	OBJECT_LANGUAGE,
 	OBJECT_LARGEOBJECT,
 	OBJECT_MATVIEW,
+	OBJECT_MODEL,
 	OBJECT_OPCLASS,
 	OBJECT_OPERATOR,
 	OBJECT_OPFAMILY,
@@ -4047,4 +4048,28 @@ typedef struct DropSubscriptionStmt
 	DropBehavior behavior;		/* RESTRICT or CASCADE behavior */
 } DropSubscriptionStmt;
 
+
+/* ----------------------
+ *		Create MODEL Statement
+ * ----------------------
+ */
+
+typedef enum CreateModelType
+{
+	CREATE_MODEL_CLASSIFICATION,
+	CREATE_MODEL_REGRESSION,
+	CREATE_MODEL_RANKING,
+} CreateModelType;
+
+typedef struct CreateModelStmt
+{
+	NodeTag			type;
+	ObjectType		objectType;		/* OBJECT_FUNCTION, OBJECT_TRIGGER, etc */
+	char	   		*modelname;		/* Model name */
+	char	   		*tablename;		/* data table for learning dataset  */
+	CreateModelType modelclass;		/* class of model  */
+	List	   		*options;		/* List of Options nodes */
+} CreateModelStmt;
+
+
 #endif							/* PARSENODES_H */
diff --git a/src/include/nodes/primnodes.h b/src/include/nodes/primnodes.h
index e1aadc39cf..1eda7ab2ac 100644
--- a/src/include/nodes/primnodes.h
+++ b/src/include/nodes/primnodes.h
@@ -2038,4 +2038,13 @@ typedef struct OnConflictExpr
 	List	   *exclRelTlist;	/* tlist of the EXCLUDED pseudo relation */
 } OnConflictExpr;
 
+typedef struct ModelOptElement
+{
+	NodeTag		type;
+	char 		*key;
+	char 		*value;
+	int16		ival;
+} ModelOptElement;
+
+
 #endif							/* PRIMNODES_H */
diff --git a/src/include/parser/kwlist.h b/src/include/parser/kwlist.h
index f5b2e61ca5..dd3f20e110 100644
--- a/src/include/parser/kwlist.h
+++ b/src/include/parser/kwlist.h
@@ -80,6 +80,7 @@ PG_KEYWORD("characteristics", CHARACTERISTICS, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("check", CHECK, RESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("checkpoint", CHECKPOINT, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("class", CLASS, UNRESERVED_KEYWORD, BARE_LABEL)
+PG_KEYWORD("classification", CLASSIFICATION, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("close", CLOSE, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("cluster", CLUSTER, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("coalesce", COALESCE, COL_NAME_KEYWORD, BARE_LABEL)
@@ -268,6 +269,7 @@ PG_KEYWORD("method", METHOD, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("minute", MINUTE_P, UNRESERVED_KEYWORD, AS_LABEL)
 PG_KEYWORD("minvalue", MINVALUE, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("mode", MODE, UNRESERVED_KEYWORD, BARE_LABEL)
+PG_KEYWORD("model", MODEL, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("month", MONTH_P, UNRESERVED_KEYWORD, AS_LABEL)
 PG_KEYWORD("move", MOVE, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("name", NAME_P, UNRESERVED_KEYWORD, BARE_LABEL)
@@ -352,6 +354,7 @@ PG_KEYWORD("ref", REF_P, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("references", REFERENCES, RESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("referencing", REFERENCING, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("refresh", REFRESH, UNRESERVED_KEYWORD, BARE_LABEL)
+PG_KEYWORD("regression", REGRESSION, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("reindex", REINDEX, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("relative", RELATIVE_P, UNRESERVED_KEYWORD, BARE_LABEL)
 PG_KEYWORD("release", RELEASE, UNRESERVED_KEYWORD, BARE_LABEL)
diff --git a/src/include/tcop/cmdtaglist.h b/src/include/tcop/cmdtaglist.h
index e738ac1c09..e20036bd8a 100644
--- a/src/include/tcop/cmdtaglist.h
+++ b/src/include/tcop/cmdtaglist.h
@@ -98,6 +98,7 @@ PG_CMDTAG(CMDTAG_CREATE_FUNCTION, "CREATE FUNCTION", true, false, false)
 PG_CMDTAG(CMDTAG_CREATE_INDEX, "CREATE INDEX", true, false, false)
 PG_CMDTAG(CMDTAG_CREATE_LANGUAGE, "CREATE LANGUAGE", true, false, false)
 PG_CMDTAG(CMDTAG_CREATE_MATERIALIZED_VIEW, "CREATE MATERIALIZED VIEW", true, false, false)
+PG_CMDTAG(CMDTAG_CREATE_MODEL, "CREATE MODEL", false, false, false)
 PG_CMDTAG(CMDTAG_CREATE_OPERATOR, "CREATE OPERATOR", true, false, false)
 PG_CMDTAG(CMDTAG_CREATE_OPERATOR_CLASS, "CREATE OPERATOR CLASS", true, false, false)
 PG_CMDTAG(CMDTAG_CREATE_OPERATOR_FAMILY, "CREATE OPERATOR FAMILY", true, false, false)
